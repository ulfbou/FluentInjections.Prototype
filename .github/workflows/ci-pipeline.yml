name: CI - FluentInjections.Tests Phase 1

on:
  workflow_dispatch: # Only runs manually

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: Restore Dependencies
        run: dotnet restore

      - name: Build Solution
        run: dotnet build --no-restore

      - name: Run Unit Tests
        run: dotnet test tests/FluentInjections.UnitTests --no-build --verbosity normal

      - name: Run Integration Tests
        run: dotnet test tests/FluentInjections.IntegrationTests --no-build --verbosity normal

      - name: Run End-to-End Tests
        run: dotnet test tests/FluentInjections.E2ETests --no-build --verbosity normal

      - name: Run Performance and Stress Tests
        run: dotnet test tests/FluentInjections.PerformanceTests && dotnet test tests/FluentInjections.StressTests

      - name: Collect Code Coverage
        run: dotnet test /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura

      - name: Publish Test Results
        uses: actions/upload-artifact@v3
        with:
          name: TestResults
          path: **/TestResults/*.xml

      - name: Publish Code Coverage Report
        uses: actions/upload-artifact@v3
        with:
          name: CodeCoverage
          path: **/coverage.cobertura.xml

      - name: Enforce Code Coverage Threshold
        run: |
          COVERAGE=$(grep -oP 'line-rate="\K[0-9.]+' **/coverage.cobertura.xml)
          COVERAGE=${COVERAGE:-0}
          echo "Code Coverage: $COVERAGE"
          if (( $(echo "$COVERAGE < 0.80" | bc -l) )); then
            echo "Coverage below threshold!";
            exit 1;
          fi
